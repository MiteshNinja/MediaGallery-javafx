import org.gradle.internal.os.OperatingSystem;

apply plugin: 'java'

repositories {
    jcenter()
}

dependencies {
}

jar {
    manifest {
        attributes 'Main-Class': 'com.steveperkins.mediagallery.Main'
    }
}

task javapackager(type: Exec) {
    dependsOn jar
    workingDir 'build/libs'

    def command
    if (OperatingSystem.current().isWindows()) {
        def javapackager = 'javapackager.exe'
        def absolutePath = "${System.getenv('JAVA_HOME')}${File.separator}bin${File.separator}javapackager.exe"
        if (new File(absolutePath).exists()) javapackager = absolutePath
        command = ['cmd', '/c', javapackager, '-deploy', '-native', '-srcfiles', 'MediaGallery-javafx.jar', '-outdir', '.', '-outfile', 'MediaGallery', '-appclass', 'com.steveperkins.mediagallery.Main', '-name', 'MediaGallery']
    } else {
        def javapackager = 'javapackager'
        def absolutePath = "${System.getenv('JAVA_HOME')}${File.separator}bin${File.separator}javapackager"
        if (new File(absolutePath).exists()) javapackager = absolutePath
        command = [javapackager, '-deploy', '-native', '-srcfiles', 'MediaGallery-javafx.jar', '-outdir', '.', '-outfile', 'MediaGallery', '-appclass', 'com.steveperkins.mediagallery.Main', '-name', 'MediaGallery']
    }
    println command.join(' ')
    commandLine command
}